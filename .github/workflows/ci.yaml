---
name: ci

on:
  push:
    branches: [ master ]
    tags: [ v*.*.* ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    container: docker.io/golangci/golangci-lint:v1.48
    steps:
      - uses: actions/checkout@v3
      - run: golangci-lint run -v

  release_oci:
    if: startsWith(github.ref, 'refs/tags/v')
    name: release_oci
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v3
      - run: echo "::set-output name=date::$(date +'%FT%H%M%SZ')"
        id: date
      - uses: docker/login-action@v1
        with:
          registry: binkcore.azurecr.io
          username: binkcore
          password: ${{ secrets.ACR_BINKCORE_PASSWORD }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile-api
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}-api:${{ steps.date.outputs.date }}
            binkcore.azurecr.io/${{ github.event.repository.name }}-api:latest
      - uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile-poster
          tags: |
            binkcore.azurecr.io/${{ github.event.repository.name }}-poster:${{ steps.date.outputs.date }}
            binkcore.azurecr.io/${{ github.event.repository.name }}-poster:latest

  release_binaries:
    if: startsWith(github.ref, 'refs/tags/v')
    name: release_binaries
    permissions:
      contents: write
    needs: [ tests ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18.1'
      - run: go mod download
      - run: go mod verify
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-w -s -X main.sha1=$GITHUB_SHA -X main.buildTime=$(date +'%Y-%m-%dT%T') -X main.version=$GITHUB_REF_NAME" -o b2k_darwin_arm64 cmd/b2k/main.go
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-w -s -X main.sha1=$GITHUB_SHA -X main.buildTime=$(date +'%Y-%m-%dT%T') -X main.version=$GITHUB_REF_NAME" -o b2k_darwin_amd64 cmd/b2k/main.go
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -ldflags="-w -s -X main.sha1=$GITHUB_SHA -X main.buildTime=$(date +'%Y-%m-%dT%T') -X main.version=$GITHUB_REF_NAME" -o b2k_linux_386 cmd/b2k/main.go
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-w -s -X main.sha1=$GITHUB_SHA -X main.buildTime=$(date +'%Y-%m-%dT%T') -X main.version=$GITHUB_REF_NAME" -o b2k_linux_arm64 cmd/b2k/main.go
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s -X main.sha1=$GITHUB_SHA -X main.buildTime=$(date +'%Y-%m-%dT%T') -X main.version=$GITHUB_REF_NAME" -o b2k_linux_amd64 cmd/b2k/main.go
      - run: CGO_ENABLED=0 GOOS=android GOARCH=arm64 go build -ldflags="-w -s -X main.sha1=$GITHUB_SHA -X main.buildTime=$(date +'%Y-%m-%dT%T') -X main.version=$GITHUB_REF_NAME" -o b2k_android_arm64 cmd/b2k/main.go
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            b2k_darwin_arm64
            b2k_darwin_amd64
            b2k_linux_386
            b2k_linux_arm64
            b2k_linux_amd64
            b2k_android_arm64
